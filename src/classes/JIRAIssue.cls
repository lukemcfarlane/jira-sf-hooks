//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class JIRAIssue {

    public class User {
        public String self;
        public String name;
        public String emailAddress;
        //public AvatarUrls avatarUrls;
        public String displayName;
        public Boolean active;
    }

    public class Resolution {
        public String self;
        public String description;
        public String iconUrl;
        public String name;
    }

    public class Fields {
        public String summary;
        public Progress progress;
        public Timetracking timetracking;
        public Issuetype issuetype;
        public Votes votes;
        //SEE BELOW //Old COMMENT: public String resolution;  //JSON2APEX: Object ; String type not necessarily 100% tested
        public List<Resolution> resolution; //JSON2APEX: Object ; List<Resolution> type not necessarily 100% tested ; TODO: May possible be issues where only 1 resolution so no array? Not sure how SF handles this
        public List<Timetracking> fixVersions;
        public DateTime resolutiondate; //JSON2APEX: Object ; DateTime type not necessarily 100% tested ; Example: "2013-04-26T17:40:57.537+0400"
        public String timespent; //JSON2APEX: Object ; String type not necessarily 100% tested ; Example: "3h 20m"
        public User reporter;
        public Integer aggregatetimeoriginalestimate; //JSON2APEX: Object ; Integer type not necessarily 100% tested ; Example: 144000
        public DateTime created;  //JSON2APEX: Object ; DateTime type not necessarily 100% tested ; Example: "2013-04-26T17:40:57.537+0400"
        public DateTime updated;  //JSON2APEX: Object ; DateTime type not necessarily 100% tested ; Example: "2013-04-26T17:40:57.537+0400"
        public String description;  //JSON2APEX: Object ; String type not necessarily 100% tested
        public Priority priority;
        public Date duedate; //JSON2APEX: Object ; Date type not necessarily 100% tested ; Example: 2013-06-10"
        public List<Timetracking> issuelinks;
        public Watches watches;
        public Worklog worklog;
        public List<Timetracking> subtasks;
        public Status status;
        public List<Timetracking> labels;
        public Integer workratio;
        public User assignee;
        public List<Timetracking> attachment;
        public Integer aggregatetimeestimate; //JSON2APEX: Object ; Integer type not necessarily 100% tested ; Example :288000
        public Project project;
        public List<Timetracking> versions;
        public String environment; //JSON2APEX: Object ; String type not necessarily 100% tested
        public Integer timeestimate; //JSON2APEX: Object ; Integer type not necessarily 100% tested ; Example :288000
        public Progress aggregateprogress;
        public DateTime lastViewed; //JSON2APEX: Object ; DateTime type not necessarily 100% tested ; Example: "2013-06-09T18:28:04.122+1200"
        public List<Timetracking> components;
        public Comment comment;
        public Integer timeoriginalestimate; //JSON2APEX: Object ; Integer type not necessarily 100% tested ; Example :288000
        public Integer aggregatetimespent; //JSON2APEX: Object ; Integer type not necessarily 100% tested ; Example :288000
    }

    public class Issuetype {
        public String self;
        public String id;
        public String description;
        public String iconUrl;
        public String name;
        public Boolean subtask;
    }

    public class Comment {
        public Integer startAt;
        public Integer maxResults;
        public Integer total;
        public List<Timetracking> comments;
    }

    // public class AvatarUrls {
    //     public String 16x16;
    //     public String 24x24;
    //     public String 32x32;
    //     public String 48x48;
    // }

    public class Timetracking {
    }

    public class Worklog {
        public Integer startAt;
        public Integer maxResults;
        public Integer total;
        public List<Timetracking> worklogs;
    }

    public class Progress {
        public Integer progress;
        public Integer total;
    }

    public class Priority {
        public String self;
        public String iconUrl;
        public String name;
        public String id;
    }

    public class Status {
        public String self;
        public String description;
        public String iconUrl;
        public String name;
        public String id;
    }

    public class Issue {
        public String id;
        public String self;
        public String key;
        public Fields fields;
    }

    public class Votes {
        public String self;
        public Integer votes;
        public Boolean hasVoted;
    }

    public String webhookEvent;
    public Long timestamp;
    public User user;
    public Issue issue;

    public class Watches {
        public String self;
        public Integer watchCount;
        public Boolean isWatching;
    }

    public class Project {
        public String self;
        public String id;
        public String key;
        public String name;
        // public AvatarUrls avatarUrls;
    }

    
    public static JIRAIssue parse(String json) {
        return (JIRAIssue) System.JSON.deserialize(json, JIRAIssue.class);
    }
    
    static testMethod void testParse() {
        String json = '{\"webhookEvent\":\"jira:issue_created\",\"timestamp\":1370755601137,\"user\":{\"self\":\"http://localhost:8080/rest/api/2/user?username=jhill\",\"name\":\"jhill\",\"emailAddress\":\"james.hill@trineo.co.nz\",\"avatarUrls\":{\"16x16\":\"http://localhost:8080/secure/useravatar?size=xsmall&avatarId=10122\",\"24x24\":\"http://localhost:8080/secure/useravatar?size=small&avatarId=10122\",\"32x32\":\"http://localhost:8080/secure/useravatar?size=medium&avatarId=10122\",\"48x48\":\"http://localhost:8080/secure/useravatar?avatarId=10122\"},\"displayName\":\"James Hill\",\"active\":true},\"issue\":{\"id\":\"10002\",\"self\":\"http://localhost:8080/rest/api/2/issue/10002\",\"key\":\"JIB-3\",\"fields\":{\"summary\":\"Temp Issue\",\"progress\":{\"progress\":0,\"total\":0},\"timetracking\":{},\"issuetype\":{\"self\":\"http://localhost:8080/rest/api/2/issuetype/1\",\"id\":\"1\",\"description\":\"A problem which impairs or prevents the functions of the product.\",\"iconUrl\":\"http://localhost:8080/images/icons/issuetypes/bug.png\",\"name\":\"Bug\",\"subtask\":false},\"votes\":{\"self\":\"http://localhost:8080/rest/api/2/issue/JIB-3/votes\",\"votes\":0,\"hasVoted\":false},\"resolution\":null,\"fixVersions\":[],\"resolutiondate\":null,\"timespent\":null,\"reporter\":{\"self\":\"http://localhost:8080/rest/api/2/user?username=jhill\",\"name\":\"jhill\",\"emailAddress\":\"james.hill@trineo.co.nz\",\"avatarUrls\":{\"16x16\":\"http://localhost:8080/secure/useravatar?size=xsmall&avatarId=10122\",\"24x24\":\"http://localhost:8080/secure/useravatar?size=small&avatarId=10122\",\"32x32\":\"http://localhost:8080/secure/useravatar?size=medium&avatarId=10122\",\"48x48\":\"http://localhost:8080/secure/useravatar?avatarId=10122\"},\"displayName\":\"James Hill\",\"active\":true},\"aggregatetimeoriginalestimate\":null,\"created\":\"2013-06-09T17:26:41.130+1200\",\"updated\":\"2013-06-09T17:26:41.130+1200\",\"description\":null,\"priority\":{\"self\":\"http://localhost:8080/rest/api/2/priority/3\",\"iconUrl\":\"http://localhost:8080/images/icons/priorities/major.png\",\"name\":\"Major\",\"id\":\"3\"},\"duedate\":null,\"issuelinks\":[],\"watches\":{\"self\":\"http://localhost:8080/rest/api/2/issue/JIB-3/watchers\",\"watchCount\":0,\"isWatching\":false},\"worklog\":{\"startAt\":0,\"maxResults\":0,\"total\":0,\"worklogs\":[]},\"subtasks\":[],\"status\":{\"self\":\"http://localhost:8080/rest/api/2/status/1\",\"description\":\"The issue is open and ready for the assignee to start work on it.\",\"iconUrl\":\"http://localhost:8080/images/icons/statuses/open.png\",\"name\":\"Open\",\"id\":\"1\"},\"labels\":[],\"workratio\":-1,\"assignee\":{\"self\":\"http://localhost:8080/rest/api/2/user?username=jhill\",\"name\":\"jhill\",\"emailAddress\":\"james.hill@trineo.co.nz\",\"avatarUrls\":{\"16x16\":\"http://localhost:8080/secure/useravatar?size=xsmall&avatarId=10122\",\"24x24\":\"http://localhost:8080/secure/useravatar?size=small&avatarId=10122\",\"32x32\":\"http://localhost:8080/secure/useravatar?size=medium&avatarId=10122\",\"48x48\":\"http://localhost:8080/secure/useravatar?avatarId=10122\"},\"displayName\":\"James Hill\",\"active\":true},\"attachment\":[],\"aggregatetimeestimate\":null,\"project\":{\"self\":\"http://localhost:8080/rest/api/2/project/JIB\",\"id\":\"10000\",\"key\":\"JIB\",\"name\":\"Jira-Integration-Bugs\",\"avatarUrls\":{\"16x16\":\"http://localhost:8080/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011\",\"24x24\":\"http://localhost:8080/secure/projectavatar?size=small&pid=10000&avatarId=10011\",\"32x32\":\"http://localhost:8080/secure/projectavatar?size=medium&pid=10000&avatarId=10011\",\"48x48\":\"http://localhost:8080/secure/projectavatar?pid=10000&avatarId=10011\"}},\"versions\":[],\"environment\":null,\"timeestimate\":null,\"aggregateprogress\":{\"progress\":0,\"total\":0},\"lastViewed\":null,\"components\":[],\"comment\":{\"startAt\":0,\"maxResults\":0,\"total\":0,\"comments\":[]},\"timeoriginalestimate\":null,\"aggregatetimespent\":null}}}';
        JIRAIssue obj = parse(json);
        System.assert(obj != null);
    }
}